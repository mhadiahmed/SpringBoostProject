version: '3.8'

services:
  spring-boost:
    build:
      context: .
      dockerfile: Dockerfile
    image: springboost/spring-boost:latest
    container_name: spring-boost-mcp
    ports:
      - "8080:8080"     # Application port
      - "28080:28080"   # MCP server port
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - SPRING_BOOST_MCP_ENABLED=true
      - SPRING_BOOST_MCP_PORT=28080
      - SPRING_BOOST_MCP_HOST=0.0.0.0
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/springboost
      - SPRING_DATASOURCE_USERNAME=springboost
      - SPRING_DATASOURCE_PASSWORD=springboost
      - JAVA_OPTS=-Xmx1g -Xms512m
    volumes:
      - spring-boost-data:/app/data
      - spring-boost-logs:/app/logs
      - ./config:/app/config:ro
    depends_on:
      - postgres
      - redis
    networks:
      - spring-boost-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    container_name: spring-boost-postgres
    environment:
      POSTGRES_DB: springboost
      POSTGRES_USER: springboost
      POSTGRES_PASSWORD: springboost
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    networks:
      - spring-boost-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U springboost"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: spring-boost-redis
    command: redis-server --appendonly yes --requirepass springboost
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - spring-boost-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: spring-boost-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - spring-boost
    networks:
      - spring-boost-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  spring-boost-data:
    driver: local
  spring-boost-logs:
    driver: local
  postgres-data:
    driver: local
  redis-data:
    driver: local

networks:
  spring-boost-network:
    driver: bridge
