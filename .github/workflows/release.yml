name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'eclipse-temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Configure Git
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        
    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v6
      with:
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.GPG_PASSPHRASE }}
        
    - name: Set up Maven settings
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'eclipse-temurin'
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        
    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
    - name: Update version in pom.xml
      run: ./mvnw versions:set -DnewVersion=${{ steps.version.outputs.VERSION }}
      
    - name: Build and test
      run: ./mvnw clean verify
      
    - name: Deploy to Maven Central
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
      run: ./mvnw deploy -P release -DskipTests
      
    - name: Build Docker image
      run: |
        docker build -t springboost/spring-boost:${{ steps.version.outputs.VERSION }} .
        docker tag springboost/spring-boost:${{ steps.version.outputs.VERSION }} springboost/spring-boost:latest
        
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Push Docker image
      run: |
        docker push springboost/spring-boost:${{ steps.version.outputs.VERSION }}
        docker push springboost/spring-boost:latest
        
    - name: Create release notes
      id: release-notes
      run: |
        # Extract changelog for this version
        VERSION=${{ steps.version.outputs.VERSION }}
        awk "/^## \[${VERSION}\]/{flag=1;next}/^## \[/{flag=0}flag" CHANGELOG.md > release-notes.md || echo "Release notes not found in CHANGELOG.md" > release-notes.md
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Spring Boost ${{ steps.version.outputs.VERSION }}
        body_path: release-notes.md
        draft: false
        prerelease: false
        
    - name: Upload JAR to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/spring-boost-${{ steps.version.outputs.VERSION }}.jar
        asset_name: spring-boost-${{ steps.version.outputs.VERSION }}.jar
        asset_content_type: application/java-archive
        
    - name: Update installation script
      run: |
        # Update version in install.sh
        sed -i 's/VERSION="latest"/VERSION="${{ steps.version.outputs.VERSION }}"/' install.sh
        
        # Commit and push changes
        git add install.sh
        git commit -m "Update install script for release ${{ steps.version.outputs.VERSION }}" || exit 0
        git push origin main

  update-homebrew:
    runs-on: ubuntu-latest
    needs: release
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Update Homebrew formula
      uses: mislav/bump-homebrew-formula-action@v3
      with:
        formula-name: spring-boost
        formula-path: Formula/spring-boost.rb
        homebrew-tap: springboost/homebrew-tap
        download-url: https://github.com/springboost/spring-boost/releases/download/${{ github.ref_name }}/spring-boost-${{ steps.version.outputs.VERSION }}.jar
        commit-message: |
          spring-boost ${{ steps.version.outputs.VERSION }}
          
          Created by ${{ github.actor }}
      env:
        COMMITTER_TOKEN: ${{ secrets.COMMITTER_TOKEN }}

  update-documentation:
    runs-on: ubuntu-latest
    needs: release
    
    steps:
    - name: Checkout docs repository
      uses: actions/checkout@v4
      with:
        repository: springboost/docs
        token: ${{ secrets.DOCS_TOKEN }}
        
    - name: Update version in docs
      run: |
        VERSION=${{ steps.version.outputs.VERSION }}
        
        # Update version references in documentation
        find . -name "*.md" -type f -exec sed -i "s/spring-boost:[0-9]\+\.[0-9]\+\.[0-9]\+/spring-boost:${VERSION}/g" {} \;
        find . -name "*.md" -type f -exec sed -i "s/v[0-9]\+\.[0-9]\+\.[0-9]\+/v${VERSION}/g" {} \;
        
        # Commit changes
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        git add .
        git commit -m "Update documentation for Spring Boost ${VERSION}" || exit 0
        git push

  notify:
    runs-on: ubuntu-latest
    needs: [release, update-homebrew, update-documentation]
    if: always()
    
    steps:
    - name: Notify Discord
      uses: Ilshidur/action-discord@master
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      with:
        args: |
          üöÄ **Spring Boost ${{ steps.version.outputs.VERSION }} Released!**
          
          ‚úÖ Maven Central: https://central.sonatype.com/artifact/com.springboost/spring-boost
          üê≥ Docker Hub: https://hub.docker.com/r/springboost/spring-boost
          üì¶ GitHub Release: https://github.com/springboost/spring-boost/releases/tag/${{ github.ref_name }}
          
          Install now: `curl -sSL https://install.springboost.com | bash`
          
    - name: Notify Twitter
      uses: Eomm/why-don-t-you-tweet@v1
      if: success()
      with:
        tweet-message: |
          üöÄ Spring Boost ${{ steps.version.outputs.VERSION }} is now available!
          
          The Laravel Boost equivalent for Spring Boot developers - accelerate your AI-assisted development with 15+ specialized MCP tools.
          
          Install: curl -sSL https://install.springboost.com | bash
          
          #SpringBoot #AI #Development #MCP
      env:
        TWITTER_CONSUMER_API_KEY: ${{ secrets.TWITTER_CONSUMER_API_KEY }}
        TWITTER_CONSUMER_API_SECRET: ${{ secrets.TWITTER_CONSUMER_API_SECRET }}
        TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
        TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
